// <auto-generated />
using System;
using Ambev.DeveloperEvaluation.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ambev.DeveloperEvaluation.SalesApi.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20250203222316_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SocialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d68102c9-1ff1-4a15-9592-bf7281d693bc"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(834),
                            Email = "ameckiff1@icio.us",
                            Name = "Archie Meckiff",
                            Phone = "1251145281",
                            SocialNumber = "117-25-1588",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d84302b2-38a5-4890-a097-3f682e22b0f2"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(843),
                            Email = "bpetracek2@dagondesign.com",
                            Name = "Bethina Petracek",
                            Phone = "2784864410",
                            SocialNumber = "807-31-1052",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9435d6a7-07f8-4a12-86e3-9caf9a1f8c30"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(847),
                            Email = "esimmons3@webeden.co.uk",
                            Name = "Eloise Simmons",
                            Phone = "5673473269",
                            SocialNumber = "687-16-2264",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6cd7f643-e0d9-469b-b0a4-1a7a9c97c8c5"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(851),
                            Email = "ppillman4@parallels.com",
                            Name = "Phyllys Pillman",
                            Phone = "4453959379",
                            SocialNumber = "512-17-6944",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a0b0b471-6afc-4c12-ba5a-f3c04f3eeab5"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(854),
                            Email = "hodeoran5@about.com",
                            Name = "Hildagarde O'Deoran",
                            Phone = "4707864856",
                            SocialNumber = "457-86-4530",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("851507b8-c4a4-4eed-bde7-ff29b74d7f1d"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(858),
                            Email = "baulsford6@goo.gl",
                            Name = "Binnie Aulsford",
                            Phone = "9814345966",
                            SocialNumber = "552-29-4372",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b059c38c-497c-4031-a378-486c9fb9ae43"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(861),
                            Email = "lcranney7@walmart.com",
                            Name = "Leonid Cranney",
                            Phone = "7247173033",
                            SocialNumber = "523-53-3047",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0e72e824-615c-461e-9249-f0cc06257278"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(865),
                            Email = "rmcclary8@nbcnews.com",
                            Name = "Robinett McClary",
                            Phone = "6461435318",
                            SocialNumber = "884-29-8560",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f0bd57bd-df9f-4ffd-9f13-a5f8ba97a20b"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(868),
                            Email = "blujan9@exblog.jp",
                            Name = "Barbra Lujan",
                            Phone = "3958797276",
                            SocialNumber = "314-65-1589",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e16b8014-2d59-4eb0-94b9-63d32b5ce612"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(694),
                            Description = "Guaraná Antarctica Zero 350ml Lata",
                            Image = "image.jpg",
                            Name = "Guaraná Antarctica Zero",
                            Price = 3.3900000000000001,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("ff779b48-d32d-4594-846e-bb73774a2179"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(698),
                            Description = "Pepsi Black 350ml Lata",
                            Image = "image.jpg",
                            Name = "Pepsi Black 350ml",
                            Price = 2.6899999999999999,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("043fda51-5f45-4ef7-9fac-1dda0c20a9f3"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(702),
                            Description = "Guaraná Antarctica Zero 2L",
                            Image = "image.jpg",
                            Name = "Guaraná Antarctica Zero",
                            Price = 9.4900000000000002,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("1cdbb9e1-30d7-4c64-8361-b2a6b2ed7d0c"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(706),
                            Description = "Guaraná Antarctica 2L",
                            Image = "image.jpg",
                            Name = "Guaraná Antarctica",
                            Price = 9.4900000000000002,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("81332a02-f937-4e13-91ea-9a68fb5d5349"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(710),
                            Description = "Guaraná Antarctica 350ml Lata",
                            Image = "image.jpg",
                            Name = "Guaraná Antarctica 350ml",
                            Price = 3.3900000000000001,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("73ba83aa-5457-413a-814e-b80d0015eca7"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(713),
                            Description = "Sukita 2L",
                            Image = "image.jpg",
                            Name = "Sukita 2L",
                            Price = 6.29,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("ea422f67-faf9-471c-9697-e787a9f10e12"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(717),
                            Description = "Soda Antarctica 350ml",
                            Image = "image.jpg",
                            Name = "Soda Antarctica 350ml",
                            Price = 2.9900000000000002,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("d99e5619-acf8-4457-8072-8764d3bf9465"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(727),
                            Description = "Pepsi Twist 350ml",
                            Image = "image.jpg",
                            Name = "Pepsi Twist 350ml",
                            Price = 2.9900000000000002,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("4a81f541-ee75-4434-802c-3e0fea9934e2"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(731),
                            Description = "Soda Antarctica Zero 2L",
                            Image = "image.jpg",
                            Name = "Soda Antarctica Zero 2L",
                            Price = 8.1899999999999995,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("0c69bcd8-a0f4-40af-b986-e2ec383b46f9"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(734),
                            Description = "Tônica Antarctica 350ml",
                            Image = "image.jpg",
                            Name = "Tônica Antarctica 350ml",
                            Price = 3.5899999999999999,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("0218022f-b28a-4186-b38a-adb79b4b03a0"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(738),
                            Description = "Tônica Antarctica 350ml",
                            Image = "image.jpg",
                            Name = "Tônica Antarctica 350ml",
                            Price = 3.5899999999999999,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("952a9e54-c256-4e73-95a8-17ea241d61e9"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(741),
                            Description = "Tônica Antarctica Gengibre 269ml",
                            Image = "image.jpg",
                            Name = "Tônica Antarctica Gengibre 269ml",
                            Price = 2.6899999999999999,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("1e11394a-241a-46b9-8b63-1eca0c97252a"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(745),
                            Description = "Sukita Uva 350ml",
                            Image = "image.jpg",
                            Name = "Sukita Uva 350ml",
                            Price = 2.9900000000000002,
                            Status = 1,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("f66f4753-699b-421a-bf3f-8d46a9ac6477"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(749),
                            Description = "Sukita 1L",
                            Image = "image.jpg",
                            Name = "Sukita 1L",
                            Price = 4.8899999999999997,
                            Status = 1,
                            Stock = 100
                        });
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<int>("SaleNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("SalesBrancheId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalSaleAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesBrancheId");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.SaleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("SaleId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SaleId")
                        .IsUnique();

                    b.ToTable("SaleItems", (string)null);
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.SalesBranch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SalesBranches", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c9cb422-f7b1-47d5-b115-7bdffe902b14"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(934),
                            Name = "Camaçari",
                            State = "BA",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ad2bb90b-f014-4e03-a932-2b804cdfc26b"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(938),
                            Name = "Caruaru",
                            State = "PE",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f68d81fb-eeaa-49b2-9528-a8c3fd49d196"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(942),
                            Name = "Contagem",
                            State = "MG",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6414124f-2154-4bfc-a7d5-fe8db16d243b"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(945),
                            Name = "Curitiba",
                            State = "PR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f89908fc-e13d-4e46-9c44-35f44ea90537"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(948),
                            Name = "Guarulhos",
                            State = "SP",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bb4b9e3e-52f4-43d1-9ab0-74f9a676a922"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(950),
                            Name = "Itajáí",
                            State = "SC",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e3927d22-d28e-4545-a7a8-03f2f8f613df"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(953),
                            Name = "Itapissuma",
                            State = "PE",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7fdd65fd-05cf-440a-96b5-750200b2e1ef"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(956),
                            Name = "Jacareí",
                            State = "SP",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0fa8e63e-f881-40ee-82ad-5d2e039fc8e3"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(962),
                            Name = "Jaguariúna",
                            State = "SP",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fd388b70-c6f0-4c34-b4dc-ebb9fb587f74"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(965),
                            Name = "Jundiaí",
                            State = "SP",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8432d35d-4f79-493c-9ccd-a69a81912d1a"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(109),
                            Email = "jeferson.almeida@ambev.com",
                            Password = "Teste@123",
                            Phone = "11997541210",
                            Role = "Admin",
                            Status = "Active",
                            Username = "jeferson.almeida"
                        },
                        new
                        {
                            Id = new Guid("c7c02971-074d-4a02-87c0-692df1bf1b5d"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(114),
                            Email = "cdepinna0@ucsd.edu",
                            Password = "ypgeD344.s",
                            Phone = "9023970118",
                            Role = "Admin",
                            Status = "Active",
                            Username = "nsloane0"
                        },
                        new
                        {
                            Id = new Guid("205b14c3-5b78-4df0-a3f4-bc44b821d1a4"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(119),
                            Email = "kdurn1@51.la",
                            Password = "guetH908~",
                            Phone = "2129615239",
                            Role = "Manager",
                            Status = "Active",
                            Username = "harkin1"
                        },
                        new
                        {
                            Id = new Guid("50213d88-dc36-4670-b351-a435a26e53f6"),
                            CreatedAt = new DateTime(2025, 2, 3, 22, 23, 15, 618, DateTimeKind.Utc).AddTicks(138),
                            Email = "freicharz2@irs.gov",
                            Password = "vxpeC202\"+",
                            Phone = "6155049411",
                            Role = "Customer",
                            Status = "Active",
                            Username = "bquare2"
                        });
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
                {
                    b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.SalesBranch", "SalesBranche")
                        .WithMany()
                        .HasForeignKey("SalesBrancheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesBranche");
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.SaleItem", b =>
                {
                    b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Product", "Product")
                        .WithOne("SaleItem")
                        .HasForeignKey("Ambev.DeveloperEvaluation.Domain.Entities.SaleItem", "SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Sale", "Sale")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Product", b =>
                {
                    b.Navigation("SaleItem")
                        .IsRequired();
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
                {
                    b.Navigation("SaleItems");
                });
#pragma warning restore 612, 618
        }
    }
}
